name: Build DeepSeek Desktop with Pake

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      url:
        description: 'Website URL to package'
        required: true
        default: 'https://chat.deepseek.com'
      app_name:
        description: 'Application name'
        required: true
        default: 'DeepSeek Chat'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            target: dmg
            icon: ./app.icns
          - platform: ubuntu-20.04
            target: deb
            icon: ./deepseek-logo.png
          - platform: windows-latest
            target: msi
            icon: ./deepseek-logo.png
    
    runs-on: ${{ matrix.platform }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install system dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev \
            pkg-config

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Pake CLI
        run: |
          npm install -g pake-cli@latest
          pake --version
        timeout-minutes: 10

      - name: Verify icon file
        run: |
          if [ "${{ matrix.platform }}" = "macos-latest" ]; then
            ls -la ./app.icns || echo "Warning: app.icns not found, will use PNG fallback"
            ICON_FILE="./app.icns"
            if [ ! -f "$ICON_FILE" ]; then
              ICON_FILE="./app.iconset/icon_256x256.png"
            fi
          else
            ls -la ./deepseek-logo.png || echo "Warning: deepseek-logo.png not found, will use iconset fallback"
            ICON_FILE="./deepseek-logo.png"
            if [ ! -f "$ICON_FILE" ]; then
              ICON_FILE="./app.iconset/icon_256x256.png"
            fi
          fi
          echo "ICON_FILE=$ICON_FILE" >> $GITHUB_ENV
        shell: bash

      - name: Build with Pake
        run: |
          URL="${{ github.event.inputs.url || 'https://chat.deepseek.com' }}"
          APP_NAME="${{ github.event.inputs.app_name || 'DeepSeek Chat' }}"
          
          echo "Building $APP_NAME from $URL"
          echo "Using icon: $ICON_FILE"
          echo "Target platform: ${{ matrix.platform }}"
          
          pake "$URL" \
            --name "$APP_NAME" \
            --icon "$ICON_FILE" \
            --width 950 \
            --height 700 \
            --hide-title-bar \
            --targets ${{ matrix.target }}
        timeout-minutes: 30
        shell: bash

      - name: List build outputs
        run: |
          echo "=== Build outputs ==="
          find . -name "*.dmg" -o -name "*.deb" -o -name "*.msi" -o -name "*.exe" -o -name "*.AppImage" | head -20

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deepseek-desktop-${{ matrix.platform }}
          path: |
            *.dmg
            *.deb
            *.msi
            *.exe
            *.AppImage
            dist/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -la ./artifacts/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: DeepSeek Desktop v${{ github.run_number }}
          body: |
            ## DeepSeek Desktop v${{ github.run_number }}
            
            自动构建的 DeepSeek Desktop 应用
            
            ### 下载说明：
            - **macOS**: 下载 `.dmg` 文件
            - **Linux**: 下载 `.deb` 文件  
            - **Windows**: 下载 `.msi` 文件
            
            ### 更新内容：
            - 基于最新的 DeepSeek Chat 网页版
            - 使用 Pake 技术打包，体积小巧
            - 支持原生桌面体验
            
            构建时间: ${{ github.event.head_commit.timestamp }}
            提交: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/deepseek-desktop-macos-latest/*.dmg
          asset_name: DeepSeek-Desktop-macOS.dmg
          asset_content_type: application/octet-stream
        continue-on-error: true

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/deepseek-desktop-ubuntu-20.04/*.deb
          asset_name: DeepSeek-Desktop-Linux.deb
          asset_content_type: application/octet-stream
        continue-on-error: true

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/deepseek-desktop-windows-latest/*.msi
          asset_name: DeepSeek-Desktop-Windows.msi
          asset_content_type: application/octet-stream
        continue-on-error: true